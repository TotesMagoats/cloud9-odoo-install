{"changed":true,"filter":false,"title":"Untitled1","tooltip":"/Untitled1","value":"#!/bin/bash\n################################################################################\n# Script for Installation: ODOO Saas4/Trunk server on Ubuntu 14.04 LTS\n# Author: André Schenkels, ICTSTUDIO 2014\n#-------------------------------------------------------------------------------\n#  \n# This script will install ODOO Server on\n# clean Ubuntu 14.04 Server\n#-------------------------------------------------------------------------------\n# USAGE:\n#\n# odoo-install\n#\n# EXAMPLE:\n# ./odoo-install \n#\n################################################################################\n \n##fixed parameters\n#openerp\nOE_USER=$USER\nOE_HOME=$GOPATH\nOE_HOME_EXT=\"$OE_HOME/odoo\"\n\n#Enter version for checkout \"8.0\" for version 8.0, \"7.0 (version 7), saas-4, saas-5 (opendays version) and \"master\" for trunk\nOE_VERSION=\"8.0\"\n\n#set the superadmin password\nOE_SUPERADMIN=\"secret\"\n\n#set the server name\nOE_CONFIG=\"odoo-server\"\n\n#--------------------------------------------------\n# Update Server\n#--------------------------------------------------\necho -e \"\\n---- Update Server ----\"\nsudo apt-get update\nsudo apt-get upgrade -y\n\n#--------------------------------------------------\n# Install PostgreSQL Server\n#--------------------------------------------------\n\n# Convert the postgres db to UTF8\nsudo service postgresql stop\nsudo pg_dropcluster --stop 9.3 main\nsudo pg_createcluster --start -e UTF-8 9.3 main\nsudo service postgresql start\n\t\necho -e \"\\n---- Creating the ODOO PostgreSQL User  ----\"\nsudo su - postgres -c \"createuser -s $OE_USER\" 2> /dev/null || true\nsudo su - postgres -c \"psql -U postgres -d postgres -c \\\"alter user $OE_USER with password '$OE_SUPERADMIN';\\\"\"\n\n#--------------------------------------------------\n# Install Dependencies\n#--------------------------------------------------\necho -e \"\\n---- Install tool packages ----\"\nsudo apt-get install wget subversion git bzr bzrtools python-pip -y\n\t\necho -e \"\\n---- Install python packages ----\"\nsudo apt-get install python-dateutil python-feedparser python-ldap python-libxslt1 python-lxml python-mako python-openid python-psycopg2 python-pybabel python-pychart python-pydot python-pyparsing python-reportlab python-simplejson python-tz python-vatnumber python-vobject python-webdav python-werkzeug python-xlwt python-yaml python-zsi python-docutils python-psutil python-mock python-unittest2 python-jinja2 python-pypdf python-decorator python-requests python-passlib python-pil -y\n\t\necho -e \"\\n---- Install python libraries ----\"\nsudo pip install gdata\n\necho -e \"\\n---- Create Log directory ----\"\nmkdir $OE_HOME/log\n\n#--------------------------------------------------\n# Install ODOO\n#--------------------------------------------------\necho -e \"\\n==== Installing ODOO Server ====\"\ngit clone --branch $OE_VERSION --single-branch https://www.github.com/odoo/odoo\n\necho -e \"\\n---- Create custom module directory ----\"\nmkdir $OE_HOME/custom-addons\n\necho -e \"* Create server config file\"\ncp $OE_HOME_EXT/debian/openerp-server.conf $OE_HOME/$OE_CONFIG.conf\nsudo chmod 640 $OE_HOME/$OE_CONFIG.conf\n\necho -e \"* Change server config file\"\nsed -i s#\"; admin_passwd.*\"#\"admin_passwd = $OE_SUPERADMIN\"#g $OE_HOME/$OE_CONFIG.conf\nsed -i s#\"db_host = .*\"#\"db_host = localhost\"#g $OE_HOME/$OE_CONFIG.conf\nsed -i s#\"db_port = .*\"#\"db_port = 5432\"#g $OE_HOME/$OE_CONFIG.conf\nsed -i s#\"db_user = .*\"#\"db_user = $OE_USER\"#g $OE_HOME/$OE_CONFIG.conf\nsed -i s#\"db_password = .*\"#\"db_password = $OE_SUPERADMIN\"#g $OE_HOME/$OE_CONFIG.conf\nsed -i s#\"addons_path = .*\"#\"addons_path = $OE_HOME_EXT/addons,$OE_HOME/custom-addons\"#g $OE_HOME/$OE_CONFIG.conf\necho \"logfile = $OE_HOME/log/$OE_CONFIG$1.log\" >> $OE_HOME/$OE_CONFIG.conf\necho \"xmlrpc_interface = 0.0.0.0 \" >> $OE_HOME/$OE_CONFIG.conf\necho \"xmlrpc_port = 8080\" >> $OE_HOME/$OE_CONFIG.conf\n\n#--------------------------------------------------\n# Adding ODOO as a deamon (initscript)\n#--------------------------------------------------\n\necho -e \"* Create init file\"\necho '#!/bin/sh' >> $OE_HOME/$OE_CONFIG\necho '### BEGIN INIT INFO' >> $OE_HOME/$OE_CONFIG\necho '# Provides: $OE_CONFIG' >> $OE_HOME/$OE_CONFIG\necho '# Required-Start: $remote_fs $syslog' >> $OE_HOME/$OE_CONFIG\necho '# Required-Stop: $remote_fs $syslog' >> $OE_HOME/$OE_CONFIG\necho '# Should-Start: $network' >> $OE_HOME/$OE_CONFIG\necho '# Should-Stop: $network' >> $OE_HOME/$OE_CONFIG\necho '# Default-Start: 2 3 4 5' >> $OE_HOME/$OE_CONFIG\necho '# Default-Stop: 0 1 6' >> $OE_HOME/$OE_CONFIG\necho '# Short-Description: Enterprise Business Applications' >> $OE_HOME/$OE_CONFIG\necho '# Description: ODOO Business Applications' >> $OE_HOME/$OE_CONFIG\necho '### END INIT INFO' >> $OE_HOME/$OE_CONFIG\necho 'PATH=/bin:/sbin:/usr/bin' >> $OE_HOME/$OE_CONFIG\necho \"DAEMON=$OE_HOME_EXT/openerp-server\" >> $OE_HOME/$OE_CONFIG\necho \"NAME=$OE_CONFIG\" >> $OE_HOME/$OE_CONFIG\necho \"DESC=$OE_CONFIG\" >> $OE_HOME/$OE_CONFIG\necho '' >> $OE_HOME/$OE_CONFIG\necho '# Specify the user name (Default: odoo).' >> $OE_HOME/$OE_CONFIG\necho \"USER=$OE_USER\" >> $OE_HOME/$OE_CONFIG\necho '' >> $OE_HOME/$OE_CONFIG\necho '# Specify an alternate config file (Default: /etc/openerp-server.conf).' >> $OE_HOME/$OE_CONFIG\necho \"CONFIGFILE=\\\"$OE_HOME/$OE_CONFIG.conf\\\"\" >> $OE_HOME/$OE_CONFIG\necho '' >> $OE_HOME/$OE_CONFIG\necho '# pidfile' >> $OE_HOME/$OE_CONFIG\necho 'PIDFILE=/var/run/$NAME.pid' >> $OE_HOME/$OE_CONFIG\necho '' >> $OE_HOME/$OE_CONFIG\necho '# Additional options that are passed to the Daemon.' >> $OE_HOME/$OE_CONFIG\necho 'DAEMON_OPTS=\"-c $CONFIGFILE\"' >> $OE_HOME/$OE_CONFIG\necho '[ -x $DAEMON ] || exit 0' >> $OE_HOME/$OE_CONFIG\necho '[ -f $CONFIGFILE ] || exit 0' >> $OE_HOME/$OE_CONFIG\necho 'checkpid() {' >> $OE_HOME/$OE_CONFIG\necho '[ -f $PIDFILE ] || return 1' >> $OE_HOME/$OE_CONFIG\necho 'pid=`cat $PIDFILE`' >> $OE_HOME/$OE_CONFIG\necho '[ -d /proc/$pid ] && return 0' >> $OE_HOME/$OE_CONFIG\necho 'return 1' >> $OE_HOME/$OE_CONFIG\necho '}' >> $OE_HOME/$OE_CONFIG\necho '' >> $OE_HOME/$OE_CONFIG\necho 'case \"${1}\" in' >> $OE_HOME/$OE_CONFIG\necho 'start)' >> $OE_HOME/$OE_CONFIG\necho 'echo -n \"Starting ${DESC}: \"' >> $OE_HOME/$OE_CONFIG\necho 'start-stop-daemon --start --quiet --pidfile ${PIDFILE} \\' >> $OE_HOME/$OE_CONFIG\necho '--chuid ${USER} --background --make-pidfile \\' >> $OE_HOME/$OE_CONFIG\necho '--exec ${DAEMON} -- ${DAEMON_OPTS}' >> $OE_HOME/$OE_CONFIG\necho 'echo \"${NAME}.\"' >> $OE_HOME/$OE_CONFIG\necho ';;' >> $OE_HOME/$OE_CONFIG\necho 'stop)' >> $OE_HOME/$OE_CONFIG\necho 'echo -n \"Stopping ${DESC}: \"' >> $OE_HOME/$OE_CONFIG\necho 'start-stop-daemon --stop --quiet --pidfile ${PIDFILE} \\' >> $OE_HOME/$OE_CONFIG\necho '--oknodo' >> $OE_HOME/$OE_CONFIG\necho 'echo \"${NAME}.\"' >> $OE_HOME/$OE_CONFIG\necho ';;' >> $OE_HOME/$OE_CONFIG\necho '' >> $OE_HOME/$OE_CONFIG\necho 'restart|force-reload)' >> $OE_HOME/$OE_CONFIG\necho 'echo -n \"Restarting ${DESC}: \"' >> $OE_HOME/$OE_CONFIG\necho 'start-stop-daemon --stop --quiet --pidfile ${PIDFILE} \\' >> $OE_HOME/$OE_CONFIG\necho '--oknodo' >> $OE_HOME/$OE_CONFIG\necho 'sleep 1' >> $OE_HOME/$OE_CONFIG\necho 'start-stop-daemon --start --quiet --pidfile ${PIDFILE} \\' >> $OE_HOME/$OE_CONFIG\necho '--chuid ${USER} --background --make-pidfile \\' >> $OE_HOME/$OE_CONFIG\necho '--exec ${DAEMON} -- ${DAEMON_OPTS}' >> $OE_HOME/$OE_CONFIG\necho 'echo \"${NAME}.\"' >> $OE_HOME/$OE_CONFIG\necho ';;' >> $OE_HOME/$OE_CONFIG\necho '*)' >> $OE_HOME/$OE_CONFIG\necho 'N=/etc/init.d/${NAME}' >> $OE_HOME/$OE_CONFIG\necho 'echo \"Usage: ${NAME} {start|stop|restart|force-reload}\" >&2' >> $OE_HOME/$OE_CONFIG\necho 'exit 1' >> $OE_HOME/$OE_CONFIG\necho ';;' >> $OE_HOME/$OE_CONFIG\necho '' >> $OE_HOME/$OE_CONFIG\necho 'esac' >> $OE_HOME/$OE_CONFIG\necho 'exit 0' >> $OE_HOME/$OE_CONFIG\n\necho -e \"* Security Init File\"\nsudo mv $OE_HOME/$OE_CONFIG /etc/init.d/$OE_CONFIG\nsudo chmod 755 /etc/init.d/$OE_CONFIG\nsudo chown root: /etc/init.d/$OE_CONFIG\n\necho -e \"* Start ODOO on Startup\"\nsudo update-rc.d $OE_CONFIG defaults\n\nsudo service apache2 stop \necho \"Done! The ODOO server can be started with /etc/init.d/$OE_CONFIG\"","undoManager":{"mark":-1,"position":2,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":0,"column":57},"action":"insert","lines":["https://github.com/openerpacademy/cloud9-odoo-install.git"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":0,"column":57},"action":"remove","lines":["https://github.com/openerpacademy/cloud9-odoo-install.git"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":178,"column":71},"action":"insert","lines":["#!/bin/bash","################################################################################","# Script for Installation: ODOO Saas4/Trunk server on Ubuntu 14.04 LTS","# Author: André Schenkels, ICTSTUDIO 2014","#-------------------------------------------------------------------------------","#  ","# This script will install ODOO Server on","# clean Ubuntu 14.04 Server","#-------------------------------------------------------------------------------","# USAGE:","#","# odoo-install","#","# EXAMPLE:","# ./odoo-install ","#","################################################################################"," ","##fixed parameters","#openerp","OE_USER=$USER","OE_HOME=$GOPATH","OE_HOME_EXT=\"$OE_HOME/odoo\"","","#Enter version for checkout \"8.0\" for version 8.0, \"7.0 (version 7), saas-4, saas-5 (opendays version) and \"master\" for trunk","OE_VERSION=\"8.0\"","","#set the superadmin password","OE_SUPERADMIN=\"secret\"","","#set the server name","OE_CONFIG=\"odoo-server\"","","#--------------------------------------------------","# Update Server","#--------------------------------------------------","echo -e \"\\n---- Update Server ----\"","sudo apt-get update","sudo apt-get upgrade -y","","#--------------------------------------------------","# Install PostgreSQL Server","#--------------------------------------------------","","# Convert the postgres db to UTF8","sudo service postgresql stop","sudo pg_dropcluster --stop 9.3 main","sudo pg_createcluster --start -e UTF-8 9.3 main","sudo service postgresql start","\t","echo -e \"\\n---- Creating the ODOO PostgreSQL User  ----\"","sudo su - postgres -c \"createuser -s $OE_USER\" 2> /dev/null || true","sudo su - postgres -c \"psql -U postgres -d postgres -c \\\"alter user $OE_USER with password '$OE_SUPERADMIN';\\\"\"","","#--------------------------------------------------","# Install Dependencies","#--------------------------------------------------","echo -e \"\\n---- Install tool packages ----\"","sudo apt-get install wget subversion git bzr bzrtools python-pip -y","\t","echo -e \"\\n---- Install python packages ----\"","sudo apt-get install python-dateutil python-feedparser python-ldap python-libxslt1 python-lxml python-mako python-openid python-psycopg2 python-pybabel python-pychart python-pydot python-pyparsing python-reportlab python-simplejson python-tz python-vatnumber python-vobject python-webdav python-werkzeug python-xlwt python-yaml python-zsi python-docutils python-psutil python-mock python-unittest2 python-jinja2 python-pypdf python-decorator python-requests python-passlib python-pil -y","\t","echo -e \"\\n---- Install python libraries ----\"","sudo pip install gdata","","echo -e \"\\n---- Create Log directory ----\"","mkdir $OE_HOME/log","","#--------------------------------------------------","# Install ODOO","#--------------------------------------------------","echo -e \"\\n==== Installing ODOO Server ====\"","git clone --branch $OE_VERSION --single-branch https://www.github.com/odoo/odoo","","echo -e \"\\n---- Create custom module directory ----\"","mkdir $OE_HOME/custom-addons","","echo -e \"* Create server config file\"","cp $OE_HOME_EXT/debian/openerp-server.conf $OE_HOME/$OE_CONFIG.conf","sudo chmod 640 $OE_HOME/$OE_CONFIG.conf","","echo -e \"* Change server config file\"","sed -i s#\"; admin_passwd.*\"#\"admin_passwd = $OE_SUPERADMIN\"#g $OE_HOME/$OE_CONFIG.conf","sed -i s#\"db_host = .*\"#\"db_host = localhost\"#g $OE_HOME/$OE_CONFIG.conf","sed -i s#\"db_port = .*\"#\"db_port = 5432\"#g $OE_HOME/$OE_CONFIG.conf","sed -i s#\"db_user = .*\"#\"db_user = $OE_USER\"#g $OE_HOME/$OE_CONFIG.conf","sed -i s#\"db_password = .*\"#\"db_password = $OE_SUPERADMIN\"#g $OE_HOME/$OE_CONFIG.conf","sed -i s#\"addons_path = .*\"#\"addons_path = $OE_HOME_EXT/addons,$OE_HOME/custom-addons\"#g $OE_HOME/$OE_CONFIG.conf","echo \"logfile = $OE_HOME/log/$OE_CONFIG$1.log\" >> $OE_HOME/$OE_CONFIG.conf","echo \"xmlrpc_interface = 0.0.0.0 \" >> $OE_HOME/$OE_CONFIG.conf","echo \"xmlrpc_port = 8080\" >> $OE_HOME/$OE_CONFIG.conf","","#--------------------------------------------------","# Adding ODOO as a deamon (initscript)","#--------------------------------------------------","","echo -e \"* Create init file\"","echo '#!/bin/sh' >> $OE_HOME/$OE_CONFIG","echo '### BEGIN INIT INFO' >> $OE_HOME/$OE_CONFIG","echo '# Provides: $OE_CONFIG' >> $OE_HOME/$OE_CONFIG","echo '# Required-Start: $remote_fs $syslog' >> $OE_HOME/$OE_CONFIG","echo '# Required-Stop: $remote_fs $syslog' >> $OE_HOME/$OE_CONFIG","echo '# Should-Start: $network' >> $OE_HOME/$OE_CONFIG","echo '# Should-Stop: $network' >> $OE_HOME/$OE_CONFIG","echo '# Default-Start: 2 3 4 5' >> $OE_HOME/$OE_CONFIG","echo '# Default-Stop: 0 1 6' >> $OE_HOME/$OE_CONFIG","echo '# Short-Description: Enterprise Business Applications' >> $OE_HOME/$OE_CONFIG","echo '# Description: ODOO Business Applications' >> $OE_HOME/$OE_CONFIG","echo '### END INIT INFO' >> $OE_HOME/$OE_CONFIG","echo 'PATH=/bin:/sbin:/usr/bin' >> $OE_HOME/$OE_CONFIG","echo \"DAEMON=$OE_HOME_EXT/openerp-server\" >> $OE_HOME/$OE_CONFIG","echo \"NAME=$OE_CONFIG\" >> $OE_HOME/$OE_CONFIG","echo \"DESC=$OE_CONFIG\" >> $OE_HOME/$OE_CONFIG","echo '' >> $OE_HOME/$OE_CONFIG","echo '# Specify the user name (Default: odoo).' >> $OE_HOME/$OE_CONFIG","echo \"USER=$OE_USER\" >> $OE_HOME/$OE_CONFIG","echo '' >> $OE_HOME/$OE_CONFIG","echo '# Specify an alternate config file (Default: /etc/openerp-server.conf).' >> $OE_HOME/$OE_CONFIG","echo \"CONFIGFILE=\\\"$OE_HOME/$OE_CONFIG.conf\\\"\" >> $OE_HOME/$OE_CONFIG","echo '' >> $OE_HOME/$OE_CONFIG","echo '# pidfile' >> $OE_HOME/$OE_CONFIG","echo 'PIDFILE=/var/run/$NAME.pid' >> $OE_HOME/$OE_CONFIG","echo '' >> $OE_HOME/$OE_CONFIG","echo '# Additional options that are passed to the Daemon.' >> $OE_HOME/$OE_CONFIG","echo 'DAEMON_OPTS=\"-c $CONFIGFILE\"' >> $OE_HOME/$OE_CONFIG","echo '[ -x $DAEMON ] || exit 0' >> $OE_HOME/$OE_CONFIG","echo '[ -f $CONFIGFILE ] || exit 0' >> $OE_HOME/$OE_CONFIG","echo 'checkpid() {' >> $OE_HOME/$OE_CONFIG","echo '[ -f $PIDFILE ] || return 1' >> $OE_HOME/$OE_CONFIG","echo 'pid=`cat $PIDFILE`' >> $OE_HOME/$OE_CONFIG","echo '[ -d /proc/$pid ] && return 0' >> $OE_HOME/$OE_CONFIG","echo 'return 1' >> $OE_HOME/$OE_CONFIG","echo '}' >> $OE_HOME/$OE_CONFIG","echo '' >> $OE_HOME/$OE_CONFIG","echo 'case \"${1}\" in' >> $OE_HOME/$OE_CONFIG","echo 'start)' >> $OE_HOME/$OE_CONFIG","echo 'echo -n \"Starting ${DESC}: \"' >> $OE_HOME/$OE_CONFIG","echo 'start-stop-daemon --start --quiet --pidfile ${PIDFILE} \\' >> $OE_HOME/$OE_CONFIG","echo '--chuid ${USER} --background --make-pidfile \\' >> $OE_HOME/$OE_CONFIG","echo '--exec ${DAEMON} -- ${DAEMON_OPTS}' >> $OE_HOME/$OE_CONFIG","echo 'echo \"${NAME}.\"' >> $OE_HOME/$OE_CONFIG","echo ';;' >> $OE_HOME/$OE_CONFIG","echo 'stop)' >> $OE_HOME/$OE_CONFIG","echo 'echo -n \"Stopping ${DESC}: \"' >> $OE_HOME/$OE_CONFIG","echo 'start-stop-daemon --stop --quiet --pidfile ${PIDFILE} \\' >> $OE_HOME/$OE_CONFIG","echo '--oknodo' >> $OE_HOME/$OE_CONFIG","echo 'echo \"${NAME}.\"' >> $OE_HOME/$OE_CONFIG","echo ';;' >> $OE_HOME/$OE_CONFIG","echo '' >> $OE_HOME/$OE_CONFIG","echo 'restart|force-reload)' >> $OE_HOME/$OE_CONFIG","echo 'echo -n \"Restarting ${DESC}: \"' >> $OE_HOME/$OE_CONFIG","echo 'start-stop-daemon --stop --quiet --pidfile ${PIDFILE} \\' >> $OE_HOME/$OE_CONFIG","echo '--oknodo' >> $OE_HOME/$OE_CONFIG","echo 'sleep 1' >> $OE_HOME/$OE_CONFIG","echo 'start-stop-daemon --start --quiet --pidfile ${PIDFILE} \\' >> $OE_HOME/$OE_CONFIG","echo '--chuid ${USER} --background --make-pidfile \\' >> $OE_HOME/$OE_CONFIG","echo '--exec ${DAEMON} -- ${DAEMON_OPTS}' >> $OE_HOME/$OE_CONFIG","echo 'echo \"${NAME}.\"' >> $OE_HOME/$OE_CONFIG","echo ';;' >> $OE_HOME/$OE_CONFIG","echo '*)' >> $OE_HOME/$OE_CONFIG","echo 'N=/etc/init.d/${NAME}' >> $OE_HOME/$OE_CONFIG","echo 'echo \"Usage: ${NAME} {start|stop|restart|force-reload}\" >&2' >> $OE_HOME/$OE_CONFIG","echo 'exit 1' >> $OE_HOME/$OE_CONFIG","echo ';;' >> $OE_HOME/$OE_CONFIG","echo '' >> $OE_HOME/$OE_CONFIG","echo 'esac' >> $OE_HOME/$OE_CONFIG","echo 'exit 0' >> $OE_HOME/$OE_CONFIG","","echo -e \"* Security Init File\"","sudo mv $OE_HOME/$OE_CONFIG /etc/init.d/$OE_CONFIG","sudo chmod 755 /etc/init.d/$OE_CONFIG","sudo chown root: /etc/init.d/$OE_CONFIG","","echo -e \"* Start ODOO on Startup\"","sudo update-rc.d $OE_CONFIG defaults","","sudo service apache2 stop ","echo \"Done! The ODOO server can be started with /etc/init.d/$OE_CONFIG\""]}]}]]},"ace":{"folds":[],"scrolltop":2346,"scrollleft":0,"selection":{"start":{"row":162,"column":39},"end":{"row":162,"column":39},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":145,"state":"start","mode":"ace/mode/text"}},"timestamp":1425331660328}